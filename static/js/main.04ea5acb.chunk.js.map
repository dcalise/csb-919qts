{"version":3,"sources":["styles.ts","batch.ts","schema.ts","supabaseClient.ts","App.tsx","index.tsx"],"names":["labelClass","inputClass","batch","pos","name","ov","schema","yup","gm","required","team","players","of","shape","aav","typeError","min","max","years","supabase","createClient","process","App","useState","appState","setAppState","appErrors","setAppErrors","useForm","resolver","yupResolver","defaultValues","register","control","handleSubmit","watch","errors","formState","useFieldArray","fields","append","remove","onSubmit","formData","payload","map","player","playerName","parseFloat","from","insert","data","error","salaryTotal","setSalaryTotal","useEffect","total","forEach","className","htmlFor","id","message","value","disabled","field","index","render","onChange","onBlur","event","target","rawValue","replace","placeholder","options","numeral","prefix","tailPrefix","numeralPositiveOnly","length","type","onClick","JSON","stringify","rootElement","document","getElementById","Error","createRoot"],"mappings":"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","file":"static/js/main.04ea5acb.chunk.js","sourcesContent":["export const labelClass = `block text-gray-700 text-sm font-bold mb-2`;\nexport const inputClass = `shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline`;\nexport const primaryButtonClass = `flex-shrink-0 bg-green-600 hover:bg-green-700 border-green-600 hover:border-green-700 text-md border-4 text-white py-2 px-4 rounded`;\nexport const secondaryButtonClass = `flex-shrink-0 border-gray-500 border-2 text-gray-500 hover:text-gray-800 text-sm py-2 px-4 rounded`;\n","export const batch = [\n  { pos: \"F\", name: \"Taylor Hall\", ov: 72 },\n  { pos: \"F\", name: \"Mikael Granlund\", ov: 71 },\n  { pos: \"F\", name: \"Mikael Backlund\", ov: 70 },\n  { pos: \"F\", name: \"Jean-Gabriel Pageau\", ov: 67 },\n  { pos: \"F\", name: \"Mike Hoffman\", ov: 66 },\n  { pos: \"F\", name: \"Lars Eller\", ov: 66 },\n  { pos: \"F\", name: \"Nick Cousins\", ov: 61 },\n  { pos: \"F\", name: \"Alex Chiasson\", ov: 61 },\n  { pos: \"F\", name: \"Austin Watson\", ov: 59 },\n  { pos: \"F\", name: \"Riley Nash\", ov: 57 },\n  { pos: \"D\", name: \"Jeff Petry\", ov: 69 },\n  { pos: \"D\", name: \"Anton Stralman\", ov: 64 },\n  { pos: \"D\", name: \"Adam Larsson\", ov: 64 },\n  { pos: \"D\", name: \"Erik Gudbranson\", ov: 63 },\n  { pos: \"D\", name: \"Andrej Sekera\", ov: 58 },\n  { pos: \"D\", name: \"Nick Blankenburg\", ov: 46 },\n  { pos: \"G\", name: \"Casey Desmith\", ov: 70 },\n  { pos: \"G\", name: \"Troy Grosenick\", ov: 62 },\n  { pos: \"G\", name: \"Dylan Ferguson\", ov: 57 }\n];\n","import * as yup from \"yup\";\n\nexport const schema = yup\n  .object({\n    gm: yup.string().required(\"Enter your name\"),\n    team: yup\n      .string()\n      .required(\"Enter the name of the team you are bidding for\"),\n    players: yup.array().of(\n      yup.object().shape({\n        name: yup.string().required(\"Select a player\"),\n        aav: yup\n          .number()\n          .typeError(\"Enter the contract AAV\")\n          .required()\n          .min(0.5, \"The minimum contract AAV is $0.50M\")\n          .max(12, \"This maximum contract AAV is $12.00M\"),\n\n        years: yup\n          .number()\n          .typeError(\"Select a contract length\")\n          .required()\n          .min(1, \"The minimum contract length is 1 year.\")\n          .max(3, \"This maximum contract length is 3 years.\")\n      })\n    )\n  })\n  .required();\n","import { createClient } from \"@supabase/supabase-js\";\n\nconst supabaseUrl = process.env.REACT_APP_SUPABASE_URL || \"\";\nconst supabaseAnonKey = process.env.REACT_APP_SUPABASE_ANON_KEY || \"\";\n\nexport const supabase = createClient(supabaseUrl, supabaseAnonKey);\n","import Cleave from \"cleave.js/react\";\nimport {\n  useForm,\n  SubmitHandler,\n  useFieldArray,\n  Controller\n} from \"react-hook-form\";\nimport {\n  inputClass,\n  labelClass,\n  primaryButtonClass,\n  secondaryButtonClass\n} from \"./styles\";\nimport { yupResolver } from \"@hookform/resolvers/yup\";\nimport { batch } from \"./batch\";\n\nimport { schema } from \"./schema\";\nimport { Inputs } from \"./types\";\nimport { supabase } from \"./supabaseClient\";\nimport React, { useEffect, useState } from \"react\";\nimport { FiChevronDown } from \"react-icons/fi\";\nimport { PostgrestError } from \"@supabase/supabase-js\";\n\ninterface ChangeEvent<T> extends React.ChangeEvent<T> {\n  target: { rawValue: string } & EventTarget & T;\n}\n\nexport default function App() {\n  const [appState, setAppState] = useState(\"new\");\n  const [appErrors, setAppErrors] = useState<PostgrestError | null>(null);\n  const {\n    register,\n    control,\n    handleSubmit,\n    watch,\n    formState: { errors }\n  } = useForm<Inputs>({\n    resolver: yupResolver(schema),\n    defaultValues: {\n      team: \"\",\n      players: [{ name: \"\", aav: \"0M\", years: null }]\n    }\n  });\n\n  const { fields, append, remove } = useFieldArray({\n    control,\n    name: \"players\"\n  });\n  const onSubmit: SubmitHandler<Inputs> = async (formData) => {\n    const payload = formData.players.map((player) => ({\n      gm: formData.gm,\n      team: formData.team,\n      playerName: player.name,\n      aav: player.aav ? parseFloat(player.aav) : 0,\n      years: player.years ? parseFloat(player.years) : 0\n    }));\n\n    const { data, error } = await supabase.from(\"ufax2022\").insert(payload);\n    if (error) {\n      setAppErrors(error);\n      setAppState(\"failed\");\n    }\n    if (data) {\n      setAppState(\"success\");\n    }\n  };\n\n  const [salaryTotal, setSalaryTotal] = useState(0);\n  const players = watch(\"players\");\n\n  // eslint-disable-next-line\n  useEffect(() => {\n    let total = 0;\n    players.forEach((player) => {\n      const aav = player.aav ? parseFloat(player.aav) : 0;\n      total = total + (aav || 0);\n    });\n\n    setSalaryTotal(total);\n  });\n\n  return (\n    <div>\n      {(appState === \"new\" || appState === \"failed\") && (\n        <form\n          onSubmit={handleSubmit(onSubmit)}\n          className=\"w-full mx-auto max-w-lg py-10\"\n        >\n          <div className=\"p-4\">\n            <h1 className=\"text-3xl\">Flex Hockey League</h1>\n            <h2 className=\"text-xl\">UFAX Batch 1</h2>\n            <p className=\"text-lg mt-4\">\n              Welcome to the annual UFA Extravaganza! You may use the form below\n              to bid on as many players as you'd like, however,{\" \"}\n              <strong>\n                you must have the available cap space to sign all players that\n                you bid on.\n              </strong>\n            </p>\n\n            <p className=\"text-lg my-4\">\n              You can select from the players in the dropdown. These are the\n              players available in the current batch. There will be several\n              batches. Find more info in Discord.\n            </p>\n\n            <p className=\"text-lg my-4\">\n              Contracts must range between $500,000 and $12,000,000 and can be a\n              maximum of 3 years long. The AAV will be formatted in millions\n              with a maximum of two decimal places. For example,{\" \"}\n              <strong>$7.25M is $7,250,000.</strong>\n            </p>\n\n            <p className=\"text-lg my-4\">\n              Tie Breaker: If the highest bid is tied, the{\" \"}\n              <strong>longer</strong> contract will win. If the length is the\n              same, the team with waiver priority (lowest in standings) will win\n              the player.\n            </p>\n          </div>\n          <div className=\"p-4\">\n            <div className=\"flex flex-wrap -mx-3 mb-2\">\n              <div className=\"w-full px-3\">\n                <label htmlFor=\"name\" className={labelClass}>\n                  Name\n                </label>\n                <div className=\"text-gray-500 mb-4 -mt-2\">\n                  Use the name we know you by. If you are bidding for another\n                  team, you can still put your name.\n                </div>\n                <input id=\"name\" className={inputClass} {...register(`gm`)} />\n                {errors?.gm && (\n                  <span className=\"text-red-700\">{errors?.gm?.message}</span>\n                )}\n              </div>\n            </div>\n            <div className=\"flex flex-wrap -mx-3 mb-2\">\n              <div className=\"w-full px-3\">\n                <label htmlFor=\"name\" className={labelClass}>\n                  Team\n                </label>\n                <div className=\"mt-1 relative rounded-md shadow-sm\">\n                  <select\n                    id=\"name\"\n                    className={inputClass}\n                    {...register(`team`)}\n                  >\n                    <option value=\"\" disabled>\n                      Select your team\n                    </option>\n                    <option value=\"\" disabled>\n                      Eastern Conference\n                    </option>\n\n                    <option value=\"BOS\">Boston Bruins</option>\n                    <option value=\"BUF\">Buffalo Sabres</option>\n                    <option value=\"CAR\">Carolina Hurricanes</option>\n                    <option value=\"CBJ\">Columbus Blue Jackets</option>\n                    <option value=\"DET\">Detroit Red Wings</option>\n                    <option value=\"FLA\">Florida Panthers</option>\n                    <option value=\"MON\">Montreal Canadiens</option>\n                    <option value=\"NJD\">New Jersey Devils</option>\n                    <option value=\"NYI\">New York Islanders</option>\n                    <option value=\"NYR\">New York Rangers</option>\n                    <option value=\"OTT\">Ottawa Senators</option>\n                    <option value=\"PHI\">Philadelphia Flyers</option>\n                    <option value=\"PIT\">Pittsburgh Penguins</option>\n                    <option value=\"TBL\">Tampa Bay Lightning</option>\n                    <option value=\"TOR\">Toronto Maple Leafs</option>\n                    <option value=\"WAS\">Washington Capitals</option>\n                    <option disabled value=\"\">\n                      Western Conference\n                    </option>\n                    <option value=\"ANA\">Anaheim Ducks</option>\n                    <option value=\"ARI\">Arizona Coyotes</option>\n                    <option value=\"CGY\">Calgary Flames</option>\n                    <option value=\"CHI\">Chicago Blackhawks</option>\n                    <option value=\"COL\">Colorado Avalanche</option>\n                    <option value=\"DAL\">Dallas Stars</option>\n                    <option value=\"EDMN\">Edmonton Oilers</option>\n                    <option value=\"LAK\">Los Angeles Kings</option>\n                    <option value=\"MIN\">Minnesota Wild</option>\n                    <option value=\"NSH\">Nashville Predators</option>\n                    <option value=\"SJS\">San Jose Sharks</option>\n                    <option value=\"SEA\">Seattle Kraken</option>\n                    <option value=\"STL\">St Louis Blues</option>\n                    <option value=\"VAN\">Vancouver Canucks</option>\n                    <option value=\"VGK\">Vegas Golden Knights</option>\n                    <option value=\"WPG\">Winnipeg Jets</option>\n                  </select>\n                  <div className=\"absolute inset-y-0 right-0 pr-4 flex items-center pointer-events-none\">\n                    <span className=\"text-gray-500 sm:text-sm\">\n                      <FiChevronDown className=\"text-xl\" />\n                    </span>\n                  </div>\n                </div>\n                {errors?.team && (\n                  <span className=\"text-red-700\">{errors?.team?.message}</span>\n                )}\n              </div>\n            </div>\n          </div>\n          {fields.map((field, index) => (\n            <div className=\"p-4\">\n              <div className=\"flex flex-wrap -mx-3 mb-2\">\n                <div className=\"w-full px-3\">\n                  <label htmlFor=\"name\" className={labelClass}>\n                    Player Name\n                  </label>\n                  <div className=\"mt-1 relative rounded-md shadow-sm\">\n                    <select\n                      id=\"name\"\n                      key={field.id}\n                      className={inputClass}\n                      {...register(`players.${index}.name`)}\n                    >\n                      <option value=\"\" disabled>\n                        Select a player\n                      </option>\n                      {batch.map((player) => (\n                        <option\n                          value={player.name}\n                        >{`${player.pos} ${player.name} ${player.ov}ov`}</option>\n                      ))}\n                    </select>\n                    <div className=\"absolute inset-y-0 right-0 pr-4 flex items-center pointer-events-none\">\n                      <span className=\"text-gray-500 sm:text-sm\">\n                        <FiChevronDown className=\"text-xl\" />\n                      </span>\n                    </div>\n                  </div>\n                  {errors?.players?.[index]?.name && (\n                    <span className=\"text-red-700\">\n                      {errors?.players?.[index]?.name?.message}\n                    </span>\n                  )}\n                </div>\n              </div>\n\n              <div className=\"flex flex-wrap -mx-3 mb-2 justify-end\">\n                <div className=\"w-full md:w-1/2 px-3 mb-2 md:mb-0\">\n                  <label htmlFor=\"name\" className={labelClass}>\n                    AAV\n                  </label>\n\n                  <Controller\n                    control={control}\n                    {...register(`players.${index}.aav`)}\n                    render={({ field: { onChange, onBlur } }) => {\n                      const handleChange = (\n                        event: ChangeEvent<HTMLInputElement>\n                      ) => {\n                        onChange(event.target.rawValue.replace(\"M\", \"\"));\n                      };\n                      return (\n                        <div className=\"mt-1 relative rounded-md shadow-sm\">\n                          <div className=\"absolute inset-y-0 left-0 pl-3 flex items-center pointer-events-none\">\n                            <span className=\"text-gray-500 sm:text-sm\">$</span>\n                          </div>\n                          <Cleave\n                            onChange={handleChange}\n                            onBlur={onBlur}\n                            className={`${inputClass} pl-6`}\n                            placeholder=\"0.50M\"\n                            options={{\n                              numeral: true,\n                              prefix: \"M\",\n                              tailPrefix: true,\n                              numeralPositiveOnly: true\n                            }}\n                          />\n                        </div>\n                      );\n                    }}\n                  />\n                  {errors?.players?.[index]?.aav && (\n                    <span className=\"text-red-700\">\n                      {errors?.players?.[index]?.aav?.message}\n                    </span>\n                  )}\n                </div>\n                <div className=\"w-full md:w-1/2 px-3 mb-2 md:mb-0\">\n                  <label htmlFor=\"years\" className={labelClass}>\n                    Contract Length\n                  </label>\n                  <div className=\"mt-1 relative rounded-md shadow-sm\">\n                    <select\n                      id=\"years\"\n                      key={field.id}\n                      className={inputClass}\n                      placeholder=\"1 - 3 years\"\n                      {...register(`players.${index}.years`)}\n                    >\n                      <option value=\"\" disabled>\n                        1 - 3 years\n                      </option>\n                      <option value=\"1\">1 year</option>\n                      <option value=\"2\">2 years</option>\n                      <option value=\"3\">3 years</option>\n                    </select>\n                    <div className=\"absolute inset-y-0 right-0 pr-4 flex items-center pointer-events-none\">\n                      <span className=\"text-gray-500 sm:text-sm\">\n                        <FiChevronDown className=\"text-xl\" />\n                      </span>\n                    </div>\n                  </div>\n                  {errors?.players?.[index]?.years && (\n                    <span className=\"text-red-700\">\n                      {errors?.players?.[index]?.years?.message}\n                    </span>\n                  )}\n                </div>\n                {fields.length > 1 && (\n                  <button\n                    type=\"button\"\n                    className=\"flex-shrink-0 border-transparent border-4 text-red-500 hover:text-red-800 text-sm py-1 px-2 rounded\"\n                    onClick={() => remove(index)}\n                  >\n                    Remove player\n                  </button>\n                )}\n              </div>\n            </div>\n          ))}\n\n          <div className=\"p-4 text-center\">\n            <button\n              type=\"button\"\n              className={`${secondaryButtonClass}`}\n              onClick={() =>\n                append({\n                  name: \"\",\n                  aav: null,\n                  years: null\n                })\n              }\n            >\n              Add another player\n            </button>\n          </div>\n\n          <div className=\"p-4\">\n            <div className=\"mb-2 text-lg text-center\">\n              <div className=\"text-green-800 font-bold\">Total salary:</div>$\n              {salaryTotal}M\n            </div>\n\n            {appState === \"failed\" ? (\n              <div>\n                <div className=\"text-red-700 mb-2\">\n                  There was a serverside error upon submission. Please send the\n                  below error to the commissioners. You can also screenshot the\n                  page to manually submit your bids.\n                </div>\n                <code>\n                  <pre>{JSON.stringify(appErrors, null, 2)}</pre>\n                </code>\n              </div>\n            ) : (\n              <div className=\"p-4 text-center\">\n                <input className={primaryButtonClass} type=\"submit\" />\n              </div>\n            )}\n          </div>\n        </form>\n      )}\n\n      {appState === \"success\" && (\n        <div className=\"w-full mx-auto max-w-lg py-10\">\n          <h1 className=\"text-3xl text-gray-800 text-center\">\n            Thank you, your bids have been successfully submitted.\n          </h1>\n        </div>\n      )}\n    </div>\n  );\n}\n","import { StrictMode } from \"react\";\nimport { createRoot } from \"react-dom/client\";\n\nimport App from \"./App\";\n\nconst rootElement = document.getElementById(\"root\");\nif (!rootElement) throw new Error(\"Failed to find the root element\");\nconst root = createRoot(rootElement);\n\nroot.render(\n  <StrictMode>\n    <App />\n  </StrictMode>\n);\n"],"sourceRoot":""}